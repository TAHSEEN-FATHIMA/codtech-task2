#Linear Regression
import matplotlib.pyplot as plt 
import numpy as np 
from sklearn import datasets, linear_model 
from sklearn.metrics import mean_squared_error, r2_score 
diabetes_x, diabetes_y = datasets.load_diabetes(return_X_y=True) 
diabetes_x = diabetes_x[:, np.newaxis, 2] 
diabetes_x_train = diabetes_x[:-20] 
diabetes_x_test = diabetes_x[-20:] 
diabetes_y_train = diabetes_y[:-20] 
diabetes_y_test = diabetes_y[-20:] 
regr = linear_model.LinearRegression() 
regr.fit(diabetes_x_train, diabetes_y_train) 
diabetes_y_pred = regr.predict(diabetes_x_test) 
print('Coefficients :\n', regr.coef_) 
print('Mean squared error : %.2f'%mean_squared_error(diabetes_y_test, 
diabetes_y_pred)) 
print('Coefficient of determination : %.2f'%r2_score(diabetes_y_test, diabetes_y_pred)) 
plt.scatter(diabetes_x_test, diabetes_y_test, color='black') 
plt.plot(diabetes_x_test, diabetes_y_pred, color='blue', linewidth=3) 
plt.xticks(()) 
plt.yticks(()) 
plt.show()

#Logistic Regression
import pandas as pd 
import numpy as np 
from sklearn.linear_model import LogisticRegression 
from sklearn.model_selection import train_test_split 
import seaborn as sns 
import matplotlib.pyplot as plt 
from sklearn import metrics 
import warnings 
warnings.filterwarnings('ignore') 
DataPath = (r'C:\Users\8316\Downloads\diabetes.csv') 
data = pd.read_csv(DataPath) 
x=data.drop("Outcome",axis=1) 
y=data[["Outcome"]] 
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.30,random_state=0) 
model=LogisticRegression() 
model.fit(x_train,y_train) 
y_predict=model.predict(x_test) 
model_score=model.score(x_test,y_test) 
print("Logistic Regression Model Score = ",model_score) 
#confusion matrix 
print("Confusion Matrix : \n",metrics.confusion_matrix(y_test,y_predict)) 
sns.heatmap(metrics.confusion_matrix(y_test,y_predict), annot=True, fmt='d', cmap='Blues') 
plt.title("LogisticRegression Confusion Matrix") 
plt.ylabel("Actual Values") 
plt.xlabel("Predicted Values") 
plt.show() 


#Multiple Regression

import pandas as pd 
from sklearn import linear_model 
DataPath = (r'C:\Users\8316\Downloads\diabetes.csv') 
df = pd.read_csv(DataPath) 
df.head() 
x=df[['Insulin','Glucose']] 
y=df[['Outcome']] 
regr=linear_model.LinearRegression() 
regr.fit(x,y) 
predicted=regr.predict([[500,200]]) 
print("Predicted Outcome = ", predicted)
